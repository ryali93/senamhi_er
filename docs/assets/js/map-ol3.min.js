/*
 Template Name: Color Admin - Responsive Admin Dashboard Template build with Twitter Bootstrap 3.3.6
 Version: 3.0.0
 Author: Antero Matos Zabarburu
 */

var handleOpenLayerSetting = function (proyeccion, extent, presicionDecimal, wmsCurrent, layerCurrent, layerCurrentTitle, wmsMapaBase, keyBingMap, dominio) {

    var format = "image/png";
    var url = wmsCurrent;

    /*Inicio: proyeccion*/
    //proj4.defs(proyeccion, "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs");
    proj4.defs(proyeccion, "+proj=longlat +datum=WGS84 +no_defs");

    var projection = new ol.proj.Projection({
        code: proyeccion,
        units: 'degrees',
        axisOrientation: 'neu'
    });

    var view = new ol.View({
        projection: projection,
        center: [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2],
        zoom: 6,
        minZoom: 2,
        maxZoom: 28
        //resolution: 39135.75848201024
    });
    /*Fin: proyeccion*/

    var controls = ol.control.defaults({rotate: false});
    var interactions = ol.interaction.defaults({
        altShiftDragRotate: false,
        pinchRotate: false,
        condition: ol.events.condition.mouseMove
    });

    /*Inicio: Mapa Base*/
    var layersMapaBase = [
        new ol.layer.Group({
            title: 'Stamen Water color',
            type: 'base',
            combine: true,
            visible: false,
            layers: [
                new ol.layer.Tile({
                    visible: true,
                    source: new ol.source.Stamen({
                        layer: 'watercolor'
                    })
                }),
                new ol.layer.Tile({
                    visible: true,
                    source: new ol.source.Stamen({
                        layer: 'terrain-labels'
                    })
                })
            ]
        }),
        new ol.layer.Tile({
            title: 'OpenStreetMap',
            type: 'xyz',
            visible: true,
            source: new ol.source.OSM()
        }),
        new ol.layer.Tile({
            title: 'ArcGis',
            type: 'base',
            visible: true,
            source: new ol.source.XYZ({
                attributions: [new ol.Attribution({
                        html: 'Tiles © <a href="http://services.arcgisonline.com/ArcGIS/' +
                                'rest/services/World_Topo_Map/MapServer">ArcGIS</a>'
                    })],
                url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}'
            })
        })
    ];
    /*Fin: Mapa Base*/

    /*Inicio: Cartografia Base*/
    var layersCartografiaBase = [
        new ol.layer.Group({
            //title: 'Mapa Base',
            type: 'base',
            combine: true,
            visible: true,
            layers: [
                new ol.layer.Image({
                    title: 'Quartiles',
                    visible: true,
                    source: new ol.source.ImageWMS({
                      ratio: 1,
                      url: 'http://localhost:8080/geoserver/senamhi_v1/wms',
                      params: {"LAYERS": 'senamhi_v1:q_pp'},
                      serverType: 'geoserver'
                   })   
                }),
                new ol.layer.Tile({
                    title: 'Regiones',
                    visible: true,
                    source: new ol.source.TileWMS({
                        url: 'http://localhost:8080/geoserver/senamhi_v1/wms',
                        params: {'LAYERS': 'senamhi_v1:gpo_regiones_pp_max'},
                        serverType: 'geoserver'
                    })
                })
            ]
        })
    ];
    /*Fin: Cartografia Base*/

    /*Inicio: Cartografia Tematica*/
    var parser = new ol.format.WMSCapabilities();

    var current_wms = [
        new ol.layer.Tile({
            title: layerCurrentTitle,
            visible: true,
            source: new ol.source.TileWMS({
                url: wmsCurrent,
                params: {'LAYERS': layerCurrent},
                serverType: 'geoserver'
            })
        })
    ];
    /*Fin: Cartografia Tematica*/

    /*Inicio: Union de Capas o Layers*/
    if (layerCurrentTitle === 'g_00_02:00_02_002_03_000_000_0000_00_00') {
        layers = [
            new ol.layer.Group({'title': 'Mapa Base', layers: layersMapaBase}),
            new ol.layer.Group({title: 'CARTOGRAFIA BASE', layers: layersCartografiaBase})
        ];
    } else {
        layers = [
            new ol.layer.Group({'title': 'Mapa Base', layers: layersMapaBase}),
            //overlayGroupPP,
            new ol.layer.Group({title: "Cartograf\xeda Tem\xe1tica", layers: current_wms}),
            new ol.layer.Group({title: 'CARTOGRAFIA BASE', layers: layersCartografiaBase})
        ];
    }
    /*Fin: Union de Capas o Layers*/

    /*Inicio: Mapa*/
    var map = new ol.Map({
        target: document.getElementById('map'),
        renderer: 'canvas',
        layers: layers,
        view: view,
        controls: controls,
        interactions: interactions,

        loadTilesWhileAnimating: true,
        loadTilesWhileInteracting: true,

        controls: ol.control.defaults({
            attribution: false,
            attributionOptions: ({
                collapsible: true
            })
        }).extend([
            new ol.control.FullScreen(),
            new ol.control.ZoomSlider(),
            new ol.control.CanvasScaleLine()
        ])
    });

    // var layerSwitcher = new ol.control.LayerSwitcher({
    //     tipLabel: 'Arbol de Capas'
    // });
    // map.addControl(layerSwitcher);

    
    /*Fin: Mapa*/

    /*Inicio: Controles*/
    //...i
    var dragdrop = new ol.interaction.DragAndDrop({formatConstructors: [ol.format.GPX, ol.format.KML, ol.format.GeoJSON]});
    map.addInteraction(dragdrop);

    dragdrop.on("addfeatures", function (a) {
        a = new ol.source.Vector({features: a.features, projection: a.projection});
        map.getLayers().push(new ol.layer.Vector({source: a}));
        map.getView().fitExtent(a.getExtent(), map.getSize())
    });
    //...f

    //...i
    var zoom_to_extent = new ol.control.ZoomToExtent({ extent: extent });
    map.addControl(zoom_to_extent);

    var sidebar = new ol.control.Sidebar({ element: 'sidebar_ol'});
    map.addControl(sidebar);
    sidebar.isVisible();

    var switcher = new ol.control.LayerSwitcher({ target: $("#capas_switcher > div").get(0)});
    map.addControl(switcher);
    //...f

    //...i
    var popup = new ol.Overlay.Popup();
    popup.setOffset([0, 0]);
    map.addOverlay(popup);


    // var wmsSource = new ol.source.TileWMS({
    //   url: 'https://ahocevar.com/geoserver/wms',
    //   params: {'LAYERS': 'ne:ne', 'TILED': true},
    //   serverType: 'geoserver',
    //   crossOrigin: 'anonymous',
    // });

    // var wmsLayer = new ol.layer.Image({
    //   source: wmsSource,
    // });

    var wmsSource = new ol.source.ImageWMS({
      url: 'http://localhost:8080/geoserver/senamhi_v1/wms',
      params: {"LAYERS": 'senamhi_v1:q_pp'},
      serverType: 'geoserver'
    });

    var wmsLayer = new ol.layer.Image({
      source: wmsSource,
    });

    var wmsLayerVector = new ol.layer.Tile({
        title: 'Regiones2',
        visible: false,
        source: new ol.source.TileWMS({
            url: 'http://localhost:8080/geoserver/senamhi_v1/wms',
            params: {'LAYERS': 'senamhi_v1:gpo_regiones_pp_max'},
            serverType: 'geoserver'
        })
    });

    var infoRaster;
    var infoVector;
    var periodoRetorno;

    map.on('singleclick', function(evt) {
        document.getElementById('coord_x').innerHTML = "<b>X (wgs84): </b>" + evt.coordinate[0].toFixed(3) + "°";
        document.getElementById('coord_y').innerHTML = "<b>Y (wgs84): </b>" + evt.coordinate[1].toFixed(3) + "°";
        getInfoRaster(evt, wmsLayer);
        getInfoVector(evt, wmsLayerVector);
    });

    function getInfoRaster(evt, layer) {
        var resolution = map.getView().getResolution();
        var coordinate = evt.coordinate;
        
        console.log(resolution);
        console.log(coordinate);

        var url = layer.getSource().getGetFeatureInfoUrl(evt.coordinate,
            resolution, 'EPSG:4326', {'INFO_FORMAT': 'application/json', 'FEATURE_COUNT': 50 });

        console.log(url);

        if (url){
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    console.log(data["features"][0]["properties"]);
                    infoRaster = data["features"][0]["properties"];
                    periodoRetorno = document.getElementById('select_tr').value;
                    // document.getElementById('infoRaster').innerHTML = infoRaster[periodoRetorno]
                    document.getElementById('infoRaster').innerHTML = "<b>PP Máxima: </b>" + infoRaster[periodoRetorno].toFixed(2);
                });
        }
    };

    function getInfoVector(evt, layer){
        var resolution = map.getView().getResolution();
        var coordinate = evt.coordinate;
        
        console.log(resolution);
        console.log(coordinate);

        var url = layer.getSource().getGetFeatureInfoUrl(evt.coordinate,
            resolution, 'EPSG:4326', {'INFO_FORMAT': 'application/json', 'FEATURE_COUNT': 50 });

        console.log(url);

        if (url){
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    console.log(data["features"][0]["properties"]["sub_regi_1"]);
                    infoVector = data["features"][0]["properties"]["sub_regi_1"];
                    // document.getElementById('infoVector').innerHTML = infoVector;
                    document.getElementById('infoVector').innerHTML = "<b>Subregión: </b>" + infoVector;
                });
        }

    };

    // Agregando punto que se borre luego
    var vectorSource = new ol.source.Vector();
    map.on('click', function (evt) {
        vectorSource.clear();
        var feature = new ol.Feature({
                geometry: new ol.geom.Point(evt.coordinate),
            name: 'PUNTO'
        });
        vectorSource = new ol.source.Vector({
            features: [feature]
        });
        var iconLayer = new ol.layer.Vector({
            source: vectorSource,
            style: new ol.style.Style({
                image: new ol.style.Icon({
                    src:'assets/img/marker.png',
                    anchor: [0.5, 1],
                    scale: 1
                })
                    
                })
        });
        map.addLayer(iconLayer); 
    });
    //...f
    /*Fin: Controles*/

    /*Inicio: Show Mapa*/
    map.getView().fit(extent, map.getSize());
    /*Fin: Show Mapa*/

};


//...Funcion principal...
var MapOpenLayer = function (proyeccion, extent, presicionDecimal, wmsCurrent, layerCurrent, layerCurrentTitle, wmsMapaBase, keyBingMap, dominio) {
    return{
        init: function (proyeccion, extent, presicionDecimal, wmsCurrent, layerCurrent, layerCurrentTitle, wmsMapaBase, keyBingMap, dominio) {
            handleOpenLayerSetting(proyeccion, extent, presicionDecimal, wmsCurrent, layerCurrent, layerCurrentTitle, wmsMapaBase, keyBingMap, dominio);
        }
    };
}();

